<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Pwir_Projekt_Wpf"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="Pwir_Projekt_Wpf.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow" 
         x:Name="myMainWindow"
        Width="1280"
        Height="720"
        MinWidth="810"
        MinHeight="450"
        >


    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFF0F0F0" Offset="0.0"/>
            <GradientStop Color="#FFE5E5E5" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFACACAC"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFECF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#FF7EB4EA"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEBF4FC" Offset="0.0"/>
            <GradientStop Color="#FFDCECFC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAECFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#FF569DE5"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFDAEBFC" Offset="0.0"/>
            <GradientStop Color="#FFC4E0FC" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#FF569DE5"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FF606060"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" BorderBrush="White" BorderThickness="3" Background="Black" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="White" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="Black"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="White"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="Black"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="Black"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="White"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="DarkGray"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="Black"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="Black"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="Black"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="Black"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="Black"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="White"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="0*"/>
                </Grid.ColumnDefinitions>

                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="1" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1,1,4,1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" Grid.RowSpan="1">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="White" BorderThickness="3" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}" Margin="-6,0,-24,-5" Grid.RowSpan="1"/>
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="5,6,-42,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Grid.ColumnSpan="2" Height="30" Width="208" Grid.RowSpan="1"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                    <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                        <Border x:Name="dropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxWhiteOnBlackStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>


    <Grid x:Name="MainGrid" Background="Black" Margin="0,0,-8,0" SizeChanged="MainGrid_SizeChanged">
        <Grid.LayoutTransform>
            <ScaleTransform x:Name="ApplicationScaleTransform"
                        CenterX="0"
                        CenterY="0"
                        ScaleX="{Binding ScaleValue, ElementName=myMainWindow}"
                        ScaleY="{Binding ScaleValue, ElementName=myMainWindow}" />
        </Grid.LayoutTransform>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        <!--Column 0-->
        <!--TextBlocks-->
        <TextBlock HorizontalAlignment="Center" Margin="0,15,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="258" Height="94" RenderTransformOrigin="0.483,0.276" TextAlignment="Center" LineHeight="36" FontSize="36" FontWeight="Bold" Foreground="White"><Run Text="Cat"/><LineBreak/><Run/><Run Text="parameters"/></TextBlock>
        <TextBlock Grid.Column="0" HorizontalAlignment="Center" Margin="132,147,136,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="159" Height="32" Foreground="White" FontWeight="Bold" FontSize="19" TextAlignment="Center" Text="Cat Weight"/>
        <TextBlock Grid.Column="0" HorizontalAlignment="Center" Margin="127,381,112,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="188" Height="58" Foreground="White" FontSize="19" TextAlignment="Center" FontWeight="Bold"><Run Text="Caloric "/><LineBreak/><Run Text="requirement"/></TextBlock>

        <!--TextBoxes-->
        <TextBox x:Name="WeightBox" GotFocus="TextBox_GotFocus" Grid.Column="0" HorizontalAlignment="Center" Height="40" Margin="0,179,0,0" TextWrapping="Wrap" Text="Weight in kg" 
                 VerticalAlignment="Top" Width="140" TextAlignment="Center"
                 BorderBrush="White" BorderThickness="3" Foreground="White" SelectionBrush="White" Background="{x:Null}" FontSize="20" FontWeight="Bold" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
        <TextBox x:Name="CaloriesBox" GotFocus="TextBox_GotFocus" Grid.Column="0" HorizontalAlignment="Center" Height="39" Margin="151,439,136,0" TextWrapping="Wrap" Text="0" 
                 VerticalAlignment="Top" Width="140" RenderTransformOrigin="0.894,2.618" SelectionBrush="White" Foreground="White" Background="{x:Null}" FontWeight="Bold" FontSize="20" 
                 TextAlignment="Center" BorderBrush="White" BorderThickness="3" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>
        <!--Buttons-->
        <Button Grid.Column="0" Click="Button_CalculateEnergy" Content="Calculate" Foreground="White" Margin="158,519,153,0" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Top" Width="116" Height="116" RenderTransformOrigin="0.538,0.288" FontWeight="Bold">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Stroke="White"  
                           StrokeThickness="4"/>
                        <ContentPresenter HorizontalAlignment="Center"  
                                    VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <ComboBox SelectedIndex="0" x:Name="CatTypeBox" Grid.Column="0" Margin="128,294,128,0" RenderTransformOrigin="0.5,0.5" SelectionChanged="ComboBox_SelectionChanged" Foreground="White" BorderBrush="White" FontWeight="Bold" FontSize="14" Style="{DynamicResource ComboBoxWhiteOnBlackStyle}" HorizontalAlignment="Center" VerticalAlignment="Top" MinWidth="1.7">

            <ComboBox.Resources>
                <!-- color of ComboBoxItem -->
                <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background" Color="Black"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="Black" />
                <!-- Mouse over color of ComboBoxItem -->
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Black" />
            </ComboBox.Resources>

            <ComboBoxItem Content="Adult castrated"/>
            <ComboBoxItem Content="Non-castrated adult"/>
            <ComboBoxItem Content="Obese or not very active"/>
            <ComboBoxItem Content="Requiring weight loss"/>
        </ComboBox>
        <TextBlock  Grid.Column="0" HorizontalAlignment="Center" Margin="124,258,124,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="179" Height="31" RenderTransformOrigin="0.717,0" FontSize="19" TextAlignment="Center" Foreground="White" FontWeight="Bold" Text="Cat body type"/>


        <!--Column 1-->
        <!--TextBlocks-->
        <TextBlock Grid.Column="1" HorizontalAlignment="Center" Margin="0,15,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="264" Height="99" RenderTransformOrigin="0.483,0.276" TextAlignment="Center" LineHeight="20" FontSize="36" FontWeight="Bold" Foreground="White"><Run Text="Food"/><LineBreak/><Run Text="Composition"/></TextBlock>

        <TextBlock Grid.Column="1" HorizontalAlignment="Center" Margin="52,467,210,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="165" Height="29" FontSize="16" Foreground="White" TextAlignment="Center"><Run FontWeight="Bold" Text="Energy density"/></TextBlock>

        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Margin="249,135,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="150" Height="20" Foreground="White" FontWeight="Bold" RenderTransformOrigin="2.465,0.667" TextAlignment="Center" Text="Fat" FontSize="19"/>
        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Margin="75,135,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="110" Height="26" Foreground="White" FontWeight="Bold" TextAlignment="Center" FontSize="19" Text="Protein"/>
        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Margin="52,218,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="150" Height="27" Foreground="White" FontWeight="Bold" TextAlignment="Center" FontSize="19"><Run Text="Ash"/><LineBreak/><Run/></TextBlock>
        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Margin="249,218,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="150" Height="27" Foreground="White" FontWeight="Bold" FontSize="19" TextAlignment="Center"><Run Text="Fiber"/><LineBreak/><Run/><LineBreak/><Run/></TextBlock>
        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Margin="52,300,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="150" Height="30" FontWeight="Bold" Foreground="White" RenderTransformOrigin="1.401,1.633" FontSize="19" TextAlignment="Center"><Run Text="Humidity"/><LineBreak/><Run/></TextBlock>
        <TextBlock Grid.Column="1" HorizontalAlignment="Center" Margin="52,396,210,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="165" Height="31" Text="Carbohydrates (%)" Foreground="White" FontWeight="Bold" TextAlignment="Center" FontSize="16"/>
        <TextBlock x:Name="CarboHydratesBox" Grid.Column="1" HorizontalAlignment="Center" Margin="249,391,28,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="150" Height="36" RenderTransformOrigin="0.329,0.533" FontSize="20" FontWeight="Bold" Foreground="White" Text="0%" TextAlignment="Center" />
        <TextBlock Grid.Column="1" HorizontalAlignment="Left" Margin="249,300,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="150" Height="42" Foreground="White" FontWeight="Bold" FontSize="19" TextAlignment="Center"><Run Text="Other"/><LineBreak/><Run/></TextBlock>

        <!--TextBoxes-->
        <TextBox x:Name="ProteinBox" GotFocus="TextBox_GotFocus" Grid.Column="1" HorizontalAlignment="Left" Height="41" Margin="52,160,0,0" TextWrapping="Wrap" Text="Specify % protein" VerticalAlignment="Top" Width="150" 
                 Background="{x:Null}" BorderBrush="White" Foreground="White" FontWeight="Bold"
                 BorderThickness="3" TextAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" RenderTransformOrigin="0.609,0.517"  FontSize="14" SelectionBrush="White"/>
        <TextBox x:Name="FatBox" GotFocus="TextBox_GotFocus" Grid.Column="1" HorizontalAlignment="Left" Height="41" Margin="249,160,0,0" TextWrapping="Wrap" Text="Specify % fat" VerticalAlignment="Top" Width="150"
                 Background="{x:Null}" BorderBrush="White" Foreground="White" FontWeight="Bold"
                 BorderThickness="3" TextAlignment="Center" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="14"/>
        <TextBox x:Name="AshBox" GotFocus="TextBox_GotFocus" Grid.Column="1" HorizontalAlignment="Left" Height="41" Margin="52,246,0,0" TextWrapping="Wrap" Text="Specify % ash" VerticalAlignment="Top" Width="150" RenderTransformOrigin="0.172,1.391" SelectionBrush="White" Background="{x:Null}" Foreground="White" BorderBrush="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="14" FontWeight="Bold" BorderThickness="3" />
        <TextBox x:Name="FiberBox" GotFocus="TextBox_GotFocus" Grid.Column="1" HorizontalAlignment="Left" Height="41" Margin="249,246,0,0" TextWrapping="Wrap" Text="Specify % Fiber" VerticalAlignment="Top" Width="150" SelectionBrush="White" Background="{x:Null}" Foreground="White" BorderBrush="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="14" FontWeight="Bold" TextAlignment="Center" BorderThickness="3"/>
        <TextBox x:Name="HumidityBox" GotFocus="TextBox_GotFocus" Grid.Column="1" HorizontalAlignment="Left" Height="41" Margin="52,327,0,0" TextWrapping="Wrap" Text="Specify % humidity" VerticalAlignment="Top" Width="150" SelectionBrush="White" Background="{x:Null}" Foreground="White" BorderBrush="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="14" FontWeight="Bold" BorderThickness="3" />
        <TextBox x:Name="OtherBox" GotFocus="TextBox_GotFocus" Grid.Column="1" HorizontalAlignment="Left" Height="41" Margin="249,328,0,0" TextWrapping="Wrap" Text="Specify % amount" VerticalAlignment="Top" Width="150" RenderTransformOrigin="0.776,0.527" SelectionBrush="White" Background="{x:Null}" Foreground="White" BorderBrush="White" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="14" FontWeight="Bold" BorderThickness="3"/>
        <TextBox x:Name="DensityBox" GotFocus="TextBox_GotFocus" Grid.Column="1" HorizontalAlignment="Center" Height="40" Margin="249,456,28,0" TextWrapping="Wrap" Text="0 kcal" VerticalAlignment="Top" Width="150"
                 
                  RenderTransformOrigin="0.894,2.618" SelectionBrush="White" Foreground="White" Background="{x:Null}" FontWeight="Bold" FontSize="20" 
                 TextAlignment="Center" BorderBrush="White" BorderThickness="3" HorizontalContentAlignment="Center" VerticalContentAlignment="Center"/>


        <!--Buttons-->
        <Button Grid.Column="1" Click="Button_CalculateDensity" Content="Calculate" Foreground="White" Margin="157,519,154,0" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Top" Width="116" Height="116" RenderTransformOrigin="0.538,0.288" FontWeight="Bold">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Stroke="White"  
                           StrokeThickness="4"/>
                        <ContentPresenter HorizontalAlignment="Center"  
                                    VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Button.Template>
        </Button>





        <!--Column 2-->
        <!--TextBlocks-->
        <TextBlock Grid.Column="2" HorizontalAlignment="Center" Margin="0,25,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="274" Height="59" Text="Food amount" FontSize="36" FontWeight="Bold" Foreground="White" TextAlignment="Center"/>
        <TextBlock x:Name="BoxFoodAmount"  Grid.Column="2" HorizontalAlignment="Center" Margin="81,122,85,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="260" Height="118" Text="0" TextAlignment="Center" FontWeight="Bold" FontSize="36" Foreground="White" RenderTransformOrigin="0.5,0.5">
            <TextBlock.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform AngleX="2.37"/>
                    <RotateTransform/>
                    <TranslateTransform X="1.076"/>
                </TransformGroup>
            </TextBlock.RenderTransform>
        </TextBlock>

        <!--TextBoxes-->
        <!--Buttons -->
        <Button Grid.Column="2" Click="Button_CalculateFood" Content="Calculate" Foreground="White" Margin="156,221,154,0" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Top" Width="116" Height="116" RenderTransformOrigin="0.538,0.288" FontWeight="Bold">
            <Button.Template>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse Stroke="White"  
                           StrokeThickness="4"/>
                        <ContentPresenter HorizontalAlignment="Center"  
                                    VerticalAlignment="Center"/>
                    </Grid>
                </ControlTemplate>
            </Button.Template>
        </Button>
        <TextBlock Grid.Column="2" HorizontalAlignment="Center" Margin="10,372,10,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="406" Height="309" FontWeight="Bold" Foreground="White" LineHeight="12" FontSize="19"><Run FontStretch="SemiExpanded" Text="Caloric requirement"/><LineBreak/><Run FontWeight="Normal" FontStretch="SemiExpanded" Text="the daily amount of calories a cat should eat"/><LineBreak/><Run Text="Analytical Ingredients"/><LineBreak/><Run FontWeight="Normal" FontStretch="SemiExpanded" Text="EU "/><Run FontWeight="Normal" FontStretch="SemiExpanded" Text="law requires the manufacturer to state the composition of the food on the label, it can be read from there"/><LineBreak/><Run Text="Amount of carbohydrates"/><LineBreak/><Run FontWeight="Normal" FontStretch="SemiExpanded" Text="The less the better, the cat should eat the least of them"/><LineBreak/><Run Text="Energy density"/><LineBreak/><Run FontWeight="Normal" FontStretch="SemiExpanded" Text="How many calories the cat will assimilate from the food, given per 100g of food "/><LineBreak/><Run Text=""/><LineBreak/><Run/></TextBlock>


    </Grid>

</Window>
    